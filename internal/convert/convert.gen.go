// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package convert

import (
	api "github.com/stnokott/spacetrader/internal/api"
	proto "github.com/stnokott/spacetrader/internal/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func ConvertAgent(source *api.Agent) *proto.CurrentAgentReply {
	var pProtoCurrentAgentReply *proto.CurrentAgentReply
	if source != nil {
		var protoCurrentAgentReply proto.CurrentAgentReply
		protoCurrentAgentReply.Name = (*source).Symbol
		protoCurrentAgentReply.Credits = (*source).Credits
		protoCurrentAgentReply.Headquarters = (*source).Headquarters
		protoCurrentAgentReply.ShipCount = IntToInt64((*source).ShipCount)
		pProtoCurrentAgentReply = &protoCurrentAgentReply
	}
	return pProtoCurrentAgentReply
}
func ConvertStatus(source *api.Status) *proto.ServerStatusReply {
	var pProtoServerStatusReply *proto.ServerStatusReply
	if source != nil {
		var protoServerStatusReply proto.ServerStatusReply
		protoServerStatusReply.Version = (*source).Version
		protoServerStatusReply.LastReset = timestamppb.New((*source).LastReset.Time)
		protoServerStatusReply.NextReset = timestamppb.New((*source).Resets.Next)
		protoServerStatusReply_GlobalStats := unnamedToProtoServerStatusReply_GlobalStats((*source).Statistics)
		protoServerStatusReply.GlobalStats = &protoServerStatusReply_GlobalStats
		if (*source).Announcements != nil {
			protoServerStatusReply.Announcements = make([]*proto.ServerStatusReply_Announcement, len((*source).Announcements))
			for i := 0; i < len((*source).Announcements); i++ {
				protoServerStatusReply_Announcement := unnamedToProtoServerStatusReply_Announcement((*source).Announcements[i])
				protoServerStatusReply.Announcements[i] = &protoServerStatusReply_Announcement
			}
		}
		pProtoServerStatusReply = &protoServerStatusReply
	}
	return pProtoServerStatusReply
}
func unnamedToProtoServerStatusReply_Announcement(source struct {
	Title string `json:"title"`
	Body  string `json:"body"`
}) proto.ServerStatusReply_Announcement {
	var protoServerStatusReply_Announcement proto.ServerStatusReply_Announcement
	protoServerStatusReply_Announcement.Title = source.Title
	protoServerStatusReply_Announcement.Body = source.Body
	return protoServerStatusReply_Announcement
}
func unnamedToProtoServerStatusReply_GlobalStats(source struct {
	Agents    int64 `json:"agents"`
	Ships     int64 `json:"ships"`
	Waypoints int64 `json:"waypoints"`
	Systems   int64 `json:"systems"`
}) proto.ServerStatusReply_GlobalStats {
	var protoServerStatusReply_GlobalStats proto.ServerStatusReply_GlobalStats
	protoServerStatusReply_GlobalStats.Agents = source.Agents
	protoServerStatusReply_GlobalStats.Ships = source.Ships
	protoServerStatusReply_GlobalStats.Waypoints = source.Waypoints
	protoServerStatusReply_GlobalStats.Systems = source.Systems
	return protoServerStatusReply_GlobalStats
}
