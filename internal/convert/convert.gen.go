// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package convert

import (
	api "github.com/stnokott/spacetrader/internal/api"
	proto "github.com/stnokott/spacetrader/internal/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func ConvertAgent(source *api.Agent) *proto.Agent {
	var pProtoAgent *proto.Agent
	if source != nil {
		var protoAgent proto.Agent
		protoAgent.Name = (*source).Symbol
		protoAgent.Credits = (*source).Credits
		protoAgent.Headquarters = (*source).Headquarters
		protoAgent.ShipCount = IntToInt64((*source).ShipCount)
		pProtoAgent = &protoAgent
	}
	return pProtoAgent
}
func ConvertStatus(source *api.Status) *proto.ServerStatus {
	var pProtoServerStatus *proto.ServerStatus
	if source != nil {
		var protoServerStatus proto.ServerStatus
		protoServerStatus.Version = (*source).Version
		protoServerStatus.LastReset = timestamppb.New((*source).LastReset.Time)
		protoServerStatus.NextReset = timestamppb.New((*source).Resets.Next)
		protoServerStatus_GlobalStats := unnamedToProtoServerStatus_GlobalStats((*source).Statistics)
		protoServerStatus.GlobalStats = &protoServerStatus_GlobalStats
		if (*source).Announcements != nil {
			protoServerStatus.Announcements = make([]*proto.ServerStatus_Announcement, len((*source).Announcements))
			for i := 0; i < len((*source).Announcements); i++ {
				protoServerStatus_Announcement := unnamedToProtoServerStatus_Announcement((*source).Announcements[i])
				protoServerStatus.Announcements[i] = &protoServerStatus_Announcement
			}
		}
		pProtoServerStatus = &protoServerStatus
	}
	return pProtoServerStatus
}
func unnamedToProtoServerStatus_Announcement(source struct {
	Title string `json:"title"`
	Body  string `json:"body"`
}) proto.ServerStatus_Announcement {
	var protoServerStatus_Announcement proto.ServerStatus_Announcement
	protoServerStatus_Announcement.Title = source.Title
	protoServerStatus_Announcement.Body = source.Body
	return protoServerStatus_Announcement
}
func unnamedToProtoServerStatus_GlobalStats(source struct {
	Agents    int64 `json:"agents"`
	Ships     int64 `json:"ships"`
	Waypoints int64 `json:"waypoints"`
	Systems   int64 `json:"systems"`
}) proto.ServerStatus_GlobalStats {
	var protoServerStatus_GlobalStats proto.ServerStatus_GlobalStats
	protoServerStatus_GlobalStats.Agents = source.Agents
	protoServerStatus_GlobalStats.Ships = source.Ships
	protoServerStatus_GlobalStats.Waypoints = source.Waypoints
	protoServerStatus_GlobalStats.Systems = source.Systems
	return protoServerStatus_GlobalStats
}
